swagger: '2.0'
info:
  title: LG SPA API
  description: API per il backend del test case allegato alle linee guida SPA.
  version: 1.0.0
host: 'mydevpc.csi.it:10110'
schemes:
  - http
basePath: /restfacade/be
produces:
  - application/json
paths:
  /ping:
    get:
      operationId: ping
      summary: servizio di ping del backend
      description: Restituisce una stringa per confermare la disponibilitï¿½ del backend
      produces:
        - application/json
      tags:
        - system
      responses:
        '200':
          description: stringa di conferma funzionamento
          schema:
            type: string
          headers:
            someheader:
              description: header di risposta di test
              type: string  
        default:
          description: Unexpected error
          schema:
            type: string
  /currentUser:
    get:
      operationId: getCurrentUser
      summary: get current user
      description: restituisce l'utente corrente
      produces:
        - application/json
      tags:
        - security
      responses:
        '200':
          description: l'utente corrente
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Unexpected error
          schema:
            type: string
  /currentUser/roles:
    get:
      operationId: getUserRoles
      summary: get current user role list
      description: restituisce la lista di ruoli a cui appartiene l'utente corrente
      produces:
        - application/json
      tags:
        - security
      responses:
        '200':
          description: la lista dei ruoli dell'utente collegato
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        default:
          description: Unexpected error
          schema:
            type: string
  /currentUser/roles/{role}:
    get:
      operationId: isUserInRole
      summary: l'utente appartiene al ruolo?
      description: challenge di appartenenza dell'utente corrente al ruolo specificato
      produces:
        - application/json
      tags:
        - security
      parameters:
        - in: path
          name: role
          required: true
          type: string
      responses:
        '200':
          description: se l'utente corrente appartiene al ruolo specificato
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: se l'utente corrente non appartiene al ruolo specificato
  /currentUser/menu:
    get:
      operationId: getMenuStructureForUser
      description: restituisce la struttura di menu (con abilitazioni) per l'utente corrente
      produces: 
        - application/json
      tags:
        - security
      responses:
        '200':
          description: la struttura dei menu con abilitazioni
          schema:
            type: array
            items: 
              $ref: '#/definitions/MenuItem'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /currentUser/screens/{screen}:
    get:
      operationId: getScreenByCod
      description: restituisce la struttura dello screen specificato, con le abilitazioni per l'utente collegato
      produces:
        - application/json
      tags:
        - security
      parameters:
        - in: path
          name: screen
          required: true
          type: string
      responses:
        '200':
          description: la struttura della schermata, con abilitazioni
          schema:
            $ref: '#/definitions/Screen'
        '403':
          description: se l'utente non e' abilitato alla schermata
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: se lo screen specificato non e' stato trovato
          schema:
            $ref: '#/definitions/Error'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /currentUser/screens/{screen}/widgets/{widget}:
    get:
      operationId: getWidget
      description: restituisce il widget specificato. E' utile per interrogazioni puntuali
      produces:
        - application/json
      tags:
        - security
      parameters:
        - in: path
          name: screen
          required: true
          type: string
        - in: path
          name: widget
          required: true
          type: string
      responses:
        '200':
          description: le info del widget specificato
          schema:
            $ref: '#/definitions/Widget'
        '404':
          description: se lo screen o il widget specificati non sono stati trovati
          schema:
            $ref: '#/definitions/Error'
  /testCall:
    post:
      operationId: testCall
      description: servizio per testare condizioni di errore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: opzioni
          required: true
          schema:
            $ref: '#/definitions/CallOptions'
      responses:
        '200':
          description: tutto ok
          schema:
            $ref: '#/definitions/UserInfo'
        '400':
          description: error 400
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: error 500
          schema:
            $ref: '#/definitions/Error'
    get:
      operationId: testCallGet
      description: servizio per testare condizioni di errore
      produces:
        - application/json
      parameters:
        - in: query
          name: desiredStatus
          required: true
          type: integer
        - in: query
          name: executionTime
          required: true
          type: integer
      responses:
        '200':
          description: tutto ok
          schema:
            $ref: '#/definitions/UserInfo'
        '400':
          description: error 400
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: error 500
          schema:
            $ref: '#/definitions/Error'
  /regioni:
    get:
      operationId: getRegioni
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: query
          name: fields
          required: false
          type: string
      responses:
        '200':
          description: le regioni italiane
          schema:
            type: array
            items:
              $ref: '#/definitions/Regione'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /regioni/{codice}:
    get:
      operationId: getRegioneById
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: path
          name: codice
          required: true
          type: integer
        - in: query
          name: fields
          required: false
          type: string
      responses:
        '200':
          description: la regione corrispondente al codice fornito nel path
          schema:
            $ref: '#/definitions/Regione'
        '404':
          description: il codice fornito per la regione non esiste
          schema:
            $ref: '#/definitions/Error'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /regioni/{codiceRegione}/provincie:
    get:
      operationId: getProvincieByRegione
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: path
          name: codiceRegione
          required: true
          type: integer
        - in: query
          name: fields
          required: false
          type: string
      responses:
        '200':
          description: le provincie della regione corrispondente al codice fornito nel path
          schema:
            type: array
            items:
              $ref: '#/definitions/Provincia'
        '404':
          description: il codice fornito per la regione non esiste
          schema:
            $ref: '#/definitions/Error'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /regioni/{codiceRegione}/provincie/{codiceProvincia}:
    get:
      operationId: getProvinciaById
      produces: 
        - application/json
      tags: 
        - business
      parameters: 
        - in: path
          name: codiceRegione
          required: true
          type: integer
        - in: path
          name: codiceProvincia
          required: true
          type: integer
        - in: query
          name: fields
          required: false
          type: string
      responses:
        '200':
          description: la provincia selezionata
          schema:
            $ref: '#/definitions/Provincia'
        '404':
          description: il codice fornito per la regione/provincia non esiste/ono
          schema:
            $ref: '#/definitions/Error'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /regioni/{codiceRegione}/provincie/{codiceProvincia}/comuni:
    get:
      operationId: getComuniByProvincia
      produces: 
        - application/json
      tags: 
        - business
      parameters: 
        - in: path
          name: codiceRegione
          required: true
          type: integer
        - in: path
          name: codiceProvincia
          required: true
          type: integer
        - in: query
          name: fields
          required: false
          type: string  
      responses:
        '200':
          description: i comuni della provincia selezionata
          schema:
            type: array
            items:
              $ref: '#/definitions/Comune'
        '404':
          description: il codice fornito per la regione/provincia non esiste/ono
          schema:
            $ref: '#/definitions/Error'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /sport:
    get:
      operationId: getSports
      produces: 
        - application/json
      tags: 
        - business
      parameters:
        - in: query
          name: filter
          type: string
          description: 'filtro (rif. tipo: GetSportsFilter)'
      responses:
        '200':
          description: elenco degli sport che soddisfano il filtro di ricerca o array vuoto se nessun elemento soddisfa i criteri 
          schema:
            type: array
            items:
              $ref: '#/definitions/Sport'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /sport/_search:
    post:
      operationId: getSports2
      consumes: 
        - application/json
      produces: 
        - application/json
      tags: 
        - business
      parameters:
        - in: body
          name: filter
          required: true
          schema:
            $ref: '#/definitions/GetSportsFilter'
      responses:
        '200':
          description: elenco degli sport che soddisfano il filtro di ricerca o array vuoto se nessun elemento soddisfa i criteri 
          schema:
            type: array
            items:
              $ref: '#/definitions/Sport'
        default:
          description: errore generico
          schema:
            $ref: '#/definitions/Error'
  /studenti:
    get:
      operationId: getAllStudenti
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: query
          name: fields
          required: false
          type: string
      responses:
        '200':
          description: l'elenco completo degli studenti
          schema:
            type: array
            items:
              $ref: '#/definitions/Studente'
        default:
          description: errore generico
          schema:
            type: string
    post:
      operationId: createStudente
      description: inserisce in archivio un nuovo studente
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - business
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Studente'
      responses:
        '201':
          description: studente inserito in archivio con successo
          schema:
            $ref: '#/definitions/Studente'
          headers:
            ETag:
              description: indicazione della nuova base-revision
              type: string
        '409':
          description: lo studente e' gia' presente in archivio
          schema:
            $ref: '#/definitions/Error'
  /studenti/{matricola}:
    get:
      operationId: getStudenteByMatricola
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: path
          name: matricola
          required: true
          type: integer
        - in: query
          name: fields
          required: false
          type: string
        - in: query
          name: lock
          type: boolean
          required: false
      responses:
        '200':
          description: lo studente associato alla matricola in input
          schema:
            $ref: '#/definitions/Studente'
          headers:
            ETag:
              description: indicazione della base-revision
              type: string
        '404':
          description: studente non trovato per la matricola in input
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: saveStudente
      description: salva le modifiche dello studente in bundle
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - business
      parameters:
        - in: path
          name: matricola
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Studente'
        - in: header
          name: If-Match
          description: per verificare validita' base-revision (confronto con ETag)
          type: string
          required: true
      responses:
        '200':
          description: salvataggio effettuato con successo
          schema:
            $ref: '#/definitions/Studente'
          headers:
            ETag:
              description: indicazione della nuova base-revision
              type: string
        '428':
          description: rilevato conflitto di concorrenza
          schema: 
            $ref: '#/definitions/Error'
  /studenti/{matricola}/indirizzoResidenza:
    get:
      operationId: getResidenzaStudente
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: path
          name: matricola
          required: true
          type: integer
      responses:
        '200':
          description: l'indirizzo dello studente
          schema:
            $ref: '#/definitions/Indirizzo'
        '404':
          description: studente non trovato per la matricola in input
          schema:
            $ref: '#/definitions/Error'
  /studenti/{matricola}/piano-studi:
    get:
      operationId: getPianoStudente
      produces:
        - application/json
      tags: 
        - business
      parameters:
        - in: path
          name: matricola
          required: true
          type: integer
      responses:
        '200':
          description: il piano di studi dello studente
          schema:
            $ref: '#/definitions/PianoStudi'
        '404':
          description: studente non trovato per la matricola in input
          schema:
            $ref: '#/definitions/Error'
  /files:
    post:
      operationId: uploadFile
      produces:
        - application/json
      tags:
        - business
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: upload ok
          schema: 
            type: string
        '400':
          description: tipo di file errato
          schema:
            $ref: '#/definitions/Error'
definitions:
  CallOptions:
    type: object
    properties:
      desiredStatus:
        type: integer
        description: http status che il servizio dovra sollevare
      executionTime:
        type: integer
        description: >-
          tempo in millisecondi che il servizio dovra impiegare per l'esecuzione
          (per testare meccanismi di timeout)
  UserInfo:
    type: object
    properties:
      nome:
        type: string
        description: nome dell'utente
      cognome:
        type: string
        description: cognome dell'utente
      codFisc:
        type: string
        description: codice fiscale dell'utente
      ente:
        type: string
        description: nome dell'ente
      ruolo:
        type: string
        description: nome del ruolo dell'utente
      cod_ruolo:
        type: string
        description: codice del ruolo dell'utente
      livAuth:
        type: integer
        description: livello di autenticazione utilizzato per accedere
      community:
        type: string
        description: community di utenti utilizzata per accedere
  Role:
    type: object
    properties:
      cod:
        type: string
      name:
        type: string
  Actor:
    type: object
    properties:
      cod:
        type: string
      name:
        type: string
  UseCase:
    type: object
    properties:
      cod:
        type: string
      name:
        type: string
  MenuItem:
    type: object
    description: la singola voce di menu
    properties:
      cod:
        type: string
        description: condice univoco dell'elemento
      enabled:
        type: boolean
        description: true se il menu e' abilitato
      visible:
        type: boolean
        description: true se il menu e' visibile
      submenu:
        type: array
        items:
          $ref: '#/definitions/MenuItem'
  Widget:
    type: object
    description: il singolo widget
    properties:
      cod:
        type: string
        description: codice univoco dell'elemento
      enabled:
        type: boolean
        description: true se il widget e' abilitato
      visible:
        type: boolean
        description: true se il widget e' visibile
  Screen:
    type: object
    description: informazioni strutturali di una schermata, con abilitazioni
    properties:
      cod:
        type: string
        description: codice univoco dell'elemento
      widgets:
        type: array
        description: elenco dei widget della schermata, con abilitazioni
        items:
          $ref: '#/definitions/Widget'
  Sport:
    type: object
    properties:
      codice:
        type: string
      nome:
        type: string
      diSquadra:
        type: boolean
      tipologiaSvolgimento:
        type: array
        items:
          $ref: '#/definitions/TipologiaSvolgimentoSport'
  ImpiantoSportivo:
    type: object
    properties:
      codice:
        type: string
      nome:
        type: string
      comune:
        $ref: '#/definitions/Comune'
      sportPraticabili:
        type: array
        items:
          $ref: '#/definitions/Sport'
  Regione:
    type: object
    properties:
      codice:
        type: integer
        description: il codice identificativo della regione
      nome:
        type: string
        description: il nome comune della regione
      provincie:
        type: array
        items:
          $ref: '#/definitions/Provincia'
  Provincia:
    type: object
    properties:
      codice:
        type: integer
        description: il codice identificativo della provincia
      nome:
        type: string
        description: il nome comune della provincia
      comuni:
        type: array
        items:
          $ref: '#/definitions/Comune'
  Comune:
    type: object
    properties:
      codice:
        type: integer
        description: il codice identificativo del comune
      nome:
        type: string
        description: il nome comune del comune
  Studente:
    type: object
    properties:
      matricola:
        type: integer
      nome:
        type: string
      cognome:
        type: string
      dataNascita:
        type: string
        format: 'date'
      indirizzoResidenza:
        $ref: '#/definitions/Indirizzo'
      indirizzoDomicilio:
        $ref: '#/definitions/Indirizzo'
  PianoStudi:
    type: object
    properties:
      codice:
        type: integer
      nomePiano:
        type: string
      corsiSeguiti:
        type: array
        items:
          $ref: '#/definitions/CorsoSeguito'
  CorsoSeguito:
    type: object
    properties:
      codice:
        type: string
      nome:
        type: string
      voto:
        type: number
      dataConseguimento:
        type: string
        format: date
  Indirizzo:
    type: object
    properties:
      codComune:
        type: integer
      codProvincia:
        type: integer
      codRegione:
        type: integer
      via:
        type: string
      civico:
        type: string
  GetSportsFilter:
    type: object
    description: "filtro per la risorsa /sports (GET). E' possibile filtrare per nome, a seconda del fatto che lo sport sia o meno di squadra, per tipologia di svolgimento (all'aperto, al chiuso) e a seconda dell impianto che lo supporta"
    properties:
      nome:
        $ref: '#/definitions/string_crit'
      diSquadra:
        $ref: '#/definitions/boolean_crit'
      tipologiaSvolgimento:
        $ref: '#/definitions/string_crit'
      praticabileIn:
        $ref: '#/definitions/string_crit'
  TipologiaSvolgimentoSport:
    type: string
    enum: [aperto, chiuso]
  boolean_crit:
    type: object
    properties:
      eq:
        type: boolean
  string_crit:
    type: object
    description: criterio su singola property di tipo stringa
    properties:
      eq:
        type: string
      ne:
        type: string
      lt:
        type: string
      lte:
        type: string
      gt:
        type: string
      gte:
        type: string
      in:
        type: array
        items:
          type: string
      nin:
        type: array
        items:
          type: string
      c:
        type: string
      ci:
        type: string
      s:
        type: string
      si:
        type: string
      e:
        type: string
      ei:
        type: string
  integer_crit:
    type: object
    description: criterio su singola property di tipo integer
    properties:
      eq:
        type: integer
      ne:
        type: integer
      lt:
        type: integer
      lte:
        type: integer
      gt:
        type: integer
      gte:
        type: integer
      in:
        type: array
        items:
          type: integer
      nin:
        type: array
        items:
          type: integer
  date_crit:
    type: object
    description: criterio su singola property di tipo data
    properties:
      eq:
        type: string
        format: date
      ne:
        type: string
        format: date
      lt:
        type: string
        format: date
      lte:
        type: string
        format: date
      gt:
        type: string
        format: date
      gte:
        type: string
        format: date
      in:
        type: array
        items:
          type: string
          format: date
      nin:
        type: array
        items:
          type: string
          format: date    
  Error:
    type: object
    properties:
      code:
        type: string
      messaggioCittadino:
        type: string
      errorMessage:
        type: string
      fields:
        type: string
        x-nullable: true
